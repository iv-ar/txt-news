@page "/les/{site}"
@model ReadModel
@{
    ViewData["Title"] = Model.Source.Title;
}

<div id="art-header" style="display: flex; justify-content: space-between">
    <div>
        <h1>@Model.Source.Title</h1>
        <p>@Model.Source.Subtitle</p>
    </div>
</div>

<article id="art-body">
    @Html.Raw(Model.Source.Content)
</article>

<footer>
    <p>
        <div style="display: flex; flex-direction: column; flex-wrap: nowrap;">
            <div style="flex-direction:column">
                @foreach (var author in Model.Source.Authors) {
                    <small style="white-space: nowrap"><b>@author.Name</b>: @author.Title</small>
                    <br/>
                }
            </div>
            <div style="flex-direction: column">
                @if (Model.Source.PublishedAt != default) {
                    <small style="white-space: nowrap">Publisert: @Model.Source.PublishedAt.ToString("dd-MM-yyyy hh:mm:ss")</small>
                }
                @if (Model.Source.UpdatedAt != default) {
                    <br/>
                    <small style="white-space: nowrap">Oppdatert: @Model.Source.UpdatedAt.ToString("dd-MM-yyyy hh:mm:ss")</small>
                }
                <br/>
                <small>
                    <a href="@Model.Source.Href" no-interception>Les p√• nrk.no</a>
                </small>
            </div>
        </div>
    </p>
</footer>

<script>
document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll("a:not([no-interception])").forEach(el => {
        if (el.href.indexOf("nrk.no") !== -1) el.href = "/les/nrk?url=" + el.href;
    });
})
</script>